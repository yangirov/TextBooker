// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TextBooker.DataAccess;

#nullable disable

namespace TextBooker.DataAccess.Migrations
{
    [DbContext(typeof(TextBookerContext))]
    [Migration("20220905115045_FixSiteDelete")]
    partial class FixSiteDelete
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Block", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("SiteId")
                        .HasColumnType("text")
                        .HasColumnName("site_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_blocks");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_blocks_site_id");

                    b.ToTable("blocks", (string)null);
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Body")
                        .HasColumnType("text")
                        .HasColumnName("body");

                    b.Property<bool>("Importance")
                        .HasColumnType("boolean")
                        .HasColumnName("importance");

                    b.Property<string>("Subject")
                        .HasColumnType("text")
                        .HasColumnName("subject");

                    b.HasKey("Id")
                        .HasName("pk_email_templates");

                    b.ToTable("email_templates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Hi! Please follow <a href=\"%host%/#/user/email-confirm?email=%email%&token=%token%\">this link</a> to verify your email address.",
                            Importance = false,
                            Subject = "Invite to TextBooker"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Name: %name%<br> Email: %email%<br> Message: %message%",
                            Importance = false,
                            Subject = "Feedback from TextBooker"
                        });
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Page", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Alias")
                        .HasColumnType("text")
                        .HasColumnName("alias");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("InAsideMenu")
                        .HasColumnType("boolean")
                        .HasColumnName("in_aside_menu");

                    b.Property<bool>("InMainMenu")
                        .HasColumnType("boolean")
                        .HasColumnName("in_main_menu");

                    b.Property<string>("Keywords")
                        .HasColumnType("text")
                        .HasColumnName("keywords");

                    b.Property<int>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<string>("SiteId")
                        .HasColumnType("text")
                        .HasColumnName("site_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.HasKey("Id")
                        .HasName("pk_pages");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_pages_site_id");

                    b.ToTable("pages", (string)null);
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.SectionName", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<string>("SiteId")
                        .HasColumnType("text")
                        .HasColumnName("site_id");

                    b.Property<int>("TemplateKeyId")
                        .HasColumnType("integer")
                        .HasColumnName("template_key_id");

                    b.HasKey("Id")
                        .HasName("pk_section_names");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_section_names_site_id");

                    b.ToTable("section_names", (string)null);
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Site", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_on");

                    b.Property<string>("Description")
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<bool>("EnabledUserScripts")
                        .HasColumnType("boolean")
                        .HasColumnName("enabled_user_scripts");

                    b.Property<string>("Icon")
                        .HasColumnType("text")
                        .HasColumnName("icon");

                    b.Property<string>("Keywords")
                        .HasColumnType("text")
                        .HasColumnName("keywords");

                    b.Property<int>("TemplateId")
                        .HasColumnType("integer")
                        .HasColumnName("template_id");

                    b.Property<string>("Title")
                        .HasColumnType("text")
                        .HasColumnName("title");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("updated_on");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_sites");

                    b.HasIndex("TemplateId")
                        .HasDatabaseName("ix_sites_template_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_sites_user_id");

                    b.ToTable("sites", (string)null);
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.SiteFile", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("FileName")
                        .HasColumnType("text")
                        .HasColumnName("file_name");

                    b.Property<string>("FilePath")
                        .HasColumnType("text")
                        .HasColumnName("file_path");

                    b.Property<string>("Hash")
                        .HasColumnType("text")
                        .HasColumnName("hash");

                    b.Property<long>("Length")
                        .HasColumnType("bigint")
                        .HasColumnName("length");

                    b.Property<string>("SiteId")
                        .HasColumnType("text")
                        .HasColumnName("site_id");

                    b.Property<int>("Type")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.Property<string>("UserId")
                        .HasColumnType("text")
                        .HasColumnName("user_id");

                    b.HasKey("Id")
                        .HasName("pk_files");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_files_site_id");

                    b.HasIndex("UserId")
                        .HasDatabaseName("ix_files_user_id");

                    b.ToTable("files", (string)null);
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("About")
                        .HasColumnType("text")
                        .HasColumnName("about");

                    b.Property<string>("Author")
                        .HasColumnType("text")
                        .HasColumnName("author");

                    b.Property<string>("AuthorUrl")
                        .HasColumnType("text")
                        .HasColumnName("author_url");

                    b.Property<string>("BlockBegin")
                        .HasColumnType("text")
                        .HasColumnName("block_begin");

                    b.Property<string>("BlockContentBegin")
                        .HasColumnType("text")
                        .HasColumnName("block_content_begin");

                    b.Property<string>("BlockContentEnd")
                        .HasColumnType("text")
                        .HasColumnName("block_content_end");

                    b.Property<string>("BlockEnd")
                        .HasColumnType("text")
                        .HasColumnName("block_end");

                    b.Property<string>("BlockTitleBegin")
                        .HasColumnType("text")
                        .HasColumnName("block_title_begin");

                    b.Property<string>("BlockTitleEnd")
                        .HasColumnType("text")
                        .HasColumnName("block_title_end");

                    b.Property<string>("License")
                        .HasColumnType("text")
                        .HasColumnName("license");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Screenshot")
                        .HasColumnType("text")
                        .HasColumnName("screenshot");

                    b.HasKey("Id")
                        .HasName("pk_templates");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("ix_templates_name");

                    b.ToTable("templates", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "This is a standard theme with blocks and a single sidebar on the right. In the title of the starnitsa-drawing of the atom model. A great topic for an electronic physics textbook.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<div class=\"boxed\">",
                            BlockContentBegin = "<div class=\"content\">",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h2 class=\"title\">",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Atomohost",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 2,
                            About = "Simple and modern light theme.",
                            Author = "Switchroyale",
                            AuthorUrl = "http://www.switchroyale.com/",
                            BlockBegin = "<li> ",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            Name = "Azul",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 3,
                            About = "Simple, light minimalistic theme in 6 different colors: blue, green, orange, pink, red and yellow.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Blue)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 4,
                            About = "Simple, light minimalistic theme in 6 different colors: blue, green, orange, pink, red and yellow.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Green)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 5,
                            About = "Simple, light minimalistic theme in 6 different colors: blue, green, orange, pink, red and yellow.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Orange)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 6,
                            About = "Simple, light minimalistic theme in 6 different colors: blue, green, orange, pink, red and yellow.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Pink)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 7,
                            About = "Simple, light minimalistic theme in 6 different colors: blue, green, orange, pink, red and yellow.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Red)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 8,
                            About = "Simple, light minimalistic theme in 6 different colors: blue, green, orange, pink, red and yellow.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Yellow)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 9,
                            About = "Black theme with one sidebar. Main menu in the sidebar.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Boosting",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 10,
                            About = "Very beautiful theme in light refreshing colors. One side panel.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li>",
                            BlockContentEnd = "</li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Cattleya",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 11,
                            About = "One side panel, green and purple tones, drawing on the theme of vegetation.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Clear Breeze",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 12,
                            About = "Sidebar on the left, blue tones, bright orange illumination of the main menu. In the sidebar above the list of pages, the \"Short about the site\" block, editable via additional fields.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li>",
                            BlockContentEnd = "</li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Condition",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 13,
                            About = "One side panel, calm colors.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Conjunction",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 14,
                            About = "Bright blue theme. One side panel.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Coverage",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 15,
                            About = "Red theme with a single sidebar and a very mouth-watering title",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Culinary",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 16,
                            About = "Dark gray theme with a side column on the left.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Customary",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 17,
                            About = "Bright creative black-green theme.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Customize",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 18,
                            About = "Nice theme in beige tones with a side column on the left.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Deviation",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 19,
                            About = "Light theme with a blue-green header and a sidebar on the left. Main menu in the sidebar.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<div id:updates\" \"class=\"boxed\">",
                            BlockContentBegin = "<div class=\"content\"><ul><li>",
                            BlockContentEnd = "</li></ul></div></div>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2 class=\"title\">",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Essence",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 20,
                            About = "Light blue theme with right side column.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Exploitable",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 21,
                            About = "Bright red theme.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Filaments",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 22,
                            About = "Beautiful orange-green theme with flowers in the title.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Fresh Scent",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 23,
                            About = "Light theme in brown tones with a single sidebar.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Guarantee",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 24,
                            About = "Wood and metal.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Improved",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 25,
                            About = "Light blue theme with one side column.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Indication",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 26,
                            About = "Strict gray theme with a side column on the left. The main menu in the sidebar.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Indicator",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 27,
                            About = "Light orange theme with one sidebar column.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Leaf Brush",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 28,
                            About = "Grey-green theme with left-side column and the picture in the header on vegetable theme.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li><p>",
                            BlockContentEnd = "</p></li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Lily Pads",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 29,
                            About = "Very beautiful bright green and black theme with one side column.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li><p>",
                            BlockContentEnd = "</p></li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Marked",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 30,
                            About = "Subject mountains, blue tone, main menu in sidebar.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Mountain Breeze",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 31,
                            About = "Bright creative light blue theme with a block \"On site\".",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Snowglass",
                            Screenshot = "screenshot.jpg"
                        });
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.TemplateKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_template_keys");

                    b.ToTable("template_keys", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "MainMenuTitle"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Subtitle"
                        },
                        new
                        {
                            Id = 3,
                            Name = "PageListTitle"
                        },
                        new
                        {
                            Id = 4,
                            Name = "AboutSiteTitle"
                        },
                        new
                        {
                            Id = 5,
                            Name = "AboutSiteShort"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Footer"
                        });
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("integer")
                        .HasColumnName("access_failed_count");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("text")
                        .HasColumnName("concurrency_stamp");

                    b.Property<string>("Email")
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("lockout_enabled");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("lockout_end");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("text")
                        .HasColumnName("normalized_email");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("text")
                        .HasColumnName("normalized_user_name");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("text")
                        .HasColumnName("password_hash");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("text")
                        .HasColumnName("phone_number");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("phone_number_confirmed");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("text")
                        .HasColumnName("security_stamp");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("boolean")
                        .HasColumnName("two_factor_enabled");

                    b.Property<string>("UserName")
                        .HasColumnType("text")
                        .HasColumnName("user_name");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasDatabaseName("ix_users_email");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.UserScript", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("text")
                        .HasColumnName("id");

                    b.Property<string>("Content")
                        .HasColumnType("text")
                        .HasColumnName("content");

                    b.Property<int>("Location")
                        .HasColumnType("integer")
                        .HasColumnName("location");

                    b.Property<string>("SiteId")
                        .HasColumnType("text")
                        .HasColumnName("site_id");

                    b.HasKey("Id")
                        .HasName("pk_user_scripts");

                    b.HasIndex("SiteId")
                        .HasDatabaseName("ix_user_scripts_site_id");

                    b.ToTable("user_scripts", (string)null);
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Block", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("Blocks")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_blocks_sites_site_id");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Page", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("Pages")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_pages_sites_site_id");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.SectionName", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("SectionNames")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_section_names_sites_site_id");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Site", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_sites_templates_template_id");

                    b.HasOne("TextBooker.DataAccess.Entities.User", "User")
                        .WithMany("Sites")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_sites_users_user_id");

                    b.Navigation("Template");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.SiteFile", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("Files")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_files_sites_site_id");

                    b.HasOne("TextBooker.DataAccess.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_files_users_user_id");

                    b.Navigation("Site");

                    b.Navigation("User");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.UserScript", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("UserScripts")
                        .HasForeignKey("SiteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_user_scripts_sites_site_id");

                    b.Navigation("Site");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Site", b =>
                {
                    b.Navigation("Blocks");

                    b.Navigation("Files");

                    b.Navigation("Pages");

                    b.Navigation("SectionNames");

                    b.Navigation("UserScripts");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.User", b =>
                {
                    b.Navigation("Sites");
                });
#pragma warning restore 612, 618
        }
    }
}
