// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TextBooker.DataAccess;

namespace TextBooker.DataAccess.Migrations
{
    [DbContext(typeof(TextBookerContext))]
    [Migration("20200609073413_Add-Blocks")]
    partial class AddBlocks
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Block", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("text");

                    b.Property<string>("SiteId")
                        .HasColumnName("site_id")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_blocks");

                    b.HasIndex("SiteId")
                        .HasName("ix_blocks_site_id");

                    b.ToTable("blocks");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.EmailTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Body")
                        .HasColumnName("body")
                        .HasColumnType("text");

                    b.Property<bool>("Importance")
                        .HasColumnName("importance")
                        .HasColumnType("boolean");

                    b.Property<string>("Subject")
                        .HasColumnName("subject")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_email_templates");

                    b.ToTable("email_templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Body = "Hi! Please follow <a href=\"%host%/#/user/email-confirm?email=%email%&token=%token%\">this link</a> to verify your email address.",
                            Importance = false,
                            Subject = "Invite to TextBooker"
                        },
                        new
                        {
                            Id = 2,
                            Body = "Name: %name%<br> Email: %email%<br> Message: %message%",
                            Importance = false,
                            Subject = "Feedback from TextBooker"
                        });
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.SectionName", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("text");

                    b.Property<string>("SiteId")
                        .HasColumnName("site_id")
                        .HasColumnType("text");

                    b.Property<int>("TemplateKeyId")
                        .HasColumnName("template_key_id")
                        .HasColumnType("integer");

                    b.HasKey("Id")
                        .HasName("pk_section_names");

                    b.HasIndex("SiteId")
                        .HasName("ix_section_names_site_id");

                    b.ToTable("section_names");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Site", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnName("created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnName("description")
                        .HasColumnType("text");

                    b.Property<bool>("EnabledUserScripts")
                        .HasColumnName("enabled_user_scripts")
                        .HasColumnType("boolean");

                    b.Property<string>("Keywords")
                        .HasColumnName("keywords")
                        .HasColumnType("text");

                    b.Property<int>("TemplateId")
                        .HasColumnName("template_id")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .HasColumnName("title")
                        .HasColumnType("text");

                    b.Property<DateTime>("UpdatedOn")
                        .HasColumnName("updated_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("UserId")
                        .HasColumnName("user_id")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_sites");

                    b.HasIndex("TemplateId")
                        .HasName("ix_sites_template_id");

                    b.HasIndex("UserId")
                        .HasName("ix_sites_user_id");

                    b.ToTable("sites");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Template", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("About")
                        .HasColumnName("about")
                        .HasColumnType("text");

                    b.Property<string>("Author")
                        .HasColumnName("author")
                        .HasColumnType("text");

                    b.Property<string>("AuthorUrl")
                        .HasColumnName("author_url")
                        .HasColumnType("text");

                    b.Property<string>("BlockBegin")
                        .HasColumnName("block_begin")
                        .HasColumnType("text");

                    b.Property<string>("BlockContentBegin")
                        .HasColumnName("block_content_begin")
                        .HasColumnType("text");

                    b.Property<string>("BlockContentEnd")
                        .HasColumnName("block_content_end")
                        .HasColumnType("text");

                    b.Property<string>("BlockEnd")
                        .HasColumnName("block_end")
                        .HasColumnType("text");

                    b.Property<string>("BlockTitleBegin")
                        .HasColumnName("block_title_begin")
                        .HasColumnType("text");

                    b.Property<string>("BlockTitleEnd")
                        .HasColumnName("block_title_end")
                        .HasColumnType("text");

                    b.Property<string>("License")
                        .HasColumnName("license")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.Property<string>("Screenshot")
                        .HasColumnName("screenshot")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_templates");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasName("ix_templates_name");

                    b.ToTable("templates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            About = "Это стандартная тема с блоками и одной боковой панелью справа. В заголовке старницы - рисунок модели атома. Прекрасная тема для электронного учебника по физике.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<div class=\"boxed\">",
                            BlockContentBegin = "<div class=\"content\">",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h2 class=\"title\">",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Atomohost",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 2,
                            About = "Простая и современная светлая тема.",
                            Author = "Switchroyale",
                            AuthorUrl = "http://www.switchroyale.com/",
                            BlockBegin = "<li> ",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            Name = "Azul",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 3,
                            About = "Простая, светлая минималистичная тема в 6 различных цветах: синий, зеленый, оранжевый, розовый, красный и желтый.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Blue)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 4,
                            About = "Простая, светлая минималистичная тема в 6 различных цветах: синий, зеленый, оранжевый, розовый, красный и желтый.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Green)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 5,
                            About = "Простая, светлая минималистичная тема в 6 различных цветах: синий, зеленый, оранжевый, розовый, красный и желтый.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Orange)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 6,
                            About = "Простая, светлая минималистичная тема в 6 различных цветах: синий, зеленый, оранжевый, розовый, красный и желтый.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Pink)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 7,
                            About = "Простая, светлая минималистичная тема в 6 различных цветах: синий, зеленый, оранжевый, розовый, красный и желтый.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Red)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 8,
                            About = "Простая, светлая минималистичная тема в 6 различных цветах: синий, зеленый, оранжевый, розовый, красный и желтый.",
                            Author = "Grigoruta Adrian",
                            AuthorUrl = "http://www.pixelstudio.ro/",
                            BlockBegin = "<div>",
                            BlockContentBegin = "<div>",
                            BlockContentEnd = "</div>",
                            BlockEnd = "</div>",
                            BlockTitleBegin = "<h3>",
                            BlockTitleEnd = "</h3>",
                            Name = "Belle (Yellow)",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 9,
                            About = "Черная тема с 1 боковой панелью. Главное меню в боковой панели.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Boosting",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 10,
                            About = "Очень красивая тема в светлых освежающих тонах. Одна боковая панель.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li>",
                            BlockContentEnd = "</li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Cattleya",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 11,
                            About = "1 боковая панель, зеленые и фиолетовые тона, рисунок на тему растительности.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Clear Breeze",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 12,
                            About = "Боковая панель слева, голубые тона, яркая оранжевая подсветка главного меню. В боковой панели над списком страниц блок \"Коротко о сайте\", редактируемый через дополнительные поля.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li>",
                            BlockContentEnd = "</li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Condition",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 13,
                            About = "Одна боковая панель, спокойные цвета.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Conjunction",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 14,
                            About = "Ярко-синяя тема. Одна боковая панель.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Coverage",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 15,
                            About = "Красная тема с одной боковой панелью и очень аппетитным заголовком",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Culinary",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 16,
                            About = "Темно-серая тема с боковой колонкой слева.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Customary",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 17,
                            About = "Яркая креативная черное-зеленая тема.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Customize",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 18,
                            About = "Приятная тема в бежевых тонах с боковой колонкой слева.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Deviation",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 19,
                            About = "Светлая тема с сине-зеленым заголовком и боковой панелью слева. Главное меню в боковой панели.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<div id:updates\" \"class=\"boxed\">",
                            BlockContentBegin = "<div class=\"content\"><ul><li>",
                            BlockContentEnd = "</li></ul></div></div>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2 class=\"title\">",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Essence",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 20,
                            About = "Светло-голубая тема с правой боковой колонкой.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Exploitable",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 21,
                            About = "Ярко-красная тема.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Filaments",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 22,
                            About = "Красивая оранжево-зеленая тема с цветами в заголовке.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Fresh Scent",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 23,
                            About = "Светлая тема в коричневых тонах с одной боковой панелью.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Guarantee",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 24,
                            About = "Дерево и металл.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Improved",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 25,
                            About = "Светлая голубая тема с одной боковой колонкой.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Indication",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 26,
                            About = "Строгая серая тема с боковой колонкой слева. Главное меню в боковой колонке.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Indicator",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 27,
                            About = "Светло-оранжевая тема с одной боковой колонкой.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Leaf Brush",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 28,
                            About = "Серо-зеленая тема с левой боковой колонкой и рисунком в заголовке на растительную тему.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li><p>",
                            BlockContentEnd = "</p></li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Lily Pads",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 29,
                            About = "Очень красивая яркая черно-зеленая тема с одной боковой колонкой.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<ul><li><p>",
                            BlockContentEnd = "</p></li></ul>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Marked",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 30,
                            About = "Тема гор, синие тона, главное меню в боковой колонке.",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Mountain Breeze",
                            Screenshot = "screenshot.jpg"
                        },
                        new
                        {
                            Id = 31,
                            About = "Яркая креативная светло-голубая тема с блоком \"О сайте\".",
                            Author = "Free CSS Templates",
                            AuthorUrl = "http://www.freecsstemplates.org/",
                            BlockBegin = "<li>",
                            BlockContentBegin = "<p>",
                            BlockContentEnd = "</p>",
                            BlockEnd = "</li>",
                            BlockTitleBegin = "<h2>",
                            BlockTitleEnd = "</h2>",
                            License = "Creative Commons Attribution 2.5",
                            Name = "Snowglass",
                            Screenshot = "screenshot.jpg"
                        });
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.TemplateKey", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Name")
                        .HasColumnName("name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_template_keys");

                    b.ToTable("template_keys");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Заголовок главного меню"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Подзаголовок"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Заголовок списка страниц"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Заголовок о сайте"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Коротко о сайте"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Подвал"
                        });
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("access_failed_count")
                        .HasColumnType("integer");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnName("concurrency_stamp")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnName("email")
                        .HasColumnType("text");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("email_confirmed")
                        .HasColumnType("boolean");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("lockout_enabled")
                        .HasColumnType("boolean");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnName("lockout_end")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnName("normalized_email")
                        .HasColumnType("text");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnName("normalized_user_name")
                        .HasColumnType("text");

                    b.Property<string>("PasswordHash")
                        .HasColumnName("password_hash")
                        .HasColumnType("text");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("phone_number")
                        .HasColumnType("text");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("phone_number_confirmed")
                        .HasColumnType("boolean");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("security_stamp")
                        .HasColumnType("text");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("two_factor_enabled")
                        .HasColumnType("boolean");

                    b.Property<string>("UserName")
                        .HasColumnName("user_name")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_users");

                    b.HasIndex("Email")
                        .IsUnique()
                        .HasName("ix_users_email");

                    b.ToTable("users");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.UserScript", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasColumnType("text");

                    b.Property<string>("Content")
                        .HasColumnName("content")
                        .HasColumnType("text");

                    b.Property<int>("Location")
                        .HasColumnName("location")
                        .HasColumnType("integer");

                    b.Property<string>("SiteId")
                        .HasColumnName("site_id")
                        .HasColumnType("text");

                    b.HasKey("Id")
                        .HasName("pk_user_scripts");

                    b.HasIndex("SiteId")
                        .HasName("ix_user_scripts_site_id");

                    b.ToTable("user_scripts");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Block", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("Blocks")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("fk_blocks_sites_site_id");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.SectionName", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("SectionNames")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("fk_section_names_sites_site_id");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.Site", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Template", "Template")
                        .WithMany()
                        .HasForeignKey("TemplateId")
                        .HasConstraintName("fk_sites_templates_template_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TextBooker.DataAccess.Entities.User", "User")
                        .WithMany("Sites")
                        .HasForeignKey("UserId")
                        .HasConstraintName("fk_sites_users_user_id");
                });

            modelBuilder.Entity("TextBooker.DataAccess.Entities.UserScript", b =>
                {
                    b.HasOne("TextBooker.DataAccess.Entities.Site", "Site")
                        .WithMany("UserScripts")
                        .HasForeignKey("SiteId")
                        .HasConstraintName("fk_user_scripts_sites_site_id");
                });
#pragma warning restore 612, 618
        }
    }
}
